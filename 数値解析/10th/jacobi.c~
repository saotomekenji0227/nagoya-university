#include <stdio.h>
#define EPS 10E-6
void main(){
  double A[4][4]={{0,7,-2,1},{0,-1,5,-1},{0,1,-2,6}};
  double B[4]={0,6,3,14};
  double x[4]={0,1,1,1};
  double xtmp[4]={1,1,1,1};
  int count = 1;
  while(jacobi(A,B,x,xtmp)==1)
    count++;
  printf("x1=%f\nx2=%f\nx3=%f\ncount=%d\n",x[1],x[2],x[3],count);
  return 0;
}

int jacobi(double A[4][4],double B[4],double x[4],double xtmp[4]){
  int flag=0;
  xtmp[1]=(-A[1][2]*x[2]-A[1][3]*x[3]+B[1])/A[1][1];
  xtmp[2]=(-A[2][1]*x[1]-A[2][3]*x[3]+B[2])/A[2][2];
  xtmp[3]=(-A[3][1]*x[1]-A[3][2]*x[2]+B[3])/A[3][3];
  for(i=1;i<4;i++){
    if(fabs(x[i]-x[tmp])>EPS) flag=1;
    x[i]=xtmp[i];
  }
  return flag;
}

int gaussSeidel(double A[4][4],double B[4],double x[4],double xtmp){
  int flag=0;
  xtmp[1]=(-A[1][2]*x[2]-A[1][3]*x[3]+B[1])/A[1][1];
  xtmp[2]=(-A[2][1]*xtmp[1]-A[2][3]*x[3]+B[2])/A[2][2];
  xtmp[3]=(-A[3][1]*xtmp[1]-A[3][2]*xtmp[2]+B[3])/A[3][3];
  for(i=1;i<4;i++){
    if(fabs(x[i]-x[tmp])>EPS) flag=1;
    x[i]=xtmp[i];
  }
  return flag;
}
